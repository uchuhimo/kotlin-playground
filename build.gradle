plugins {
    id "com.dorongold.task-tree" version "1.2.2"
    id "org.jetbrains.kotlin.jvm" version "1.1.2"
    id "me.champeau.gradle.jmh" version "0.3.1"
}

allprojects {
    group "uchuhimo"
    version "0.1"

    ext {
        kotlin_version = "1.1.2"
    }

    repositories {
        //mavenCentral()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        jcenter()
    }

    task wrapper(type: Wrapper) {
        gradleVersion = "3.2"
        distributionType = Wrapper.DistributionType.ALL
    }
}

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

subprojects {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "application"
    apply plugin: "me.champeau.gradle.jmh"

    mainClassName = findProperty("mainClass") ?: ""

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testCompile "junit:junit:4.12"
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    tasks.withType(Test) {
        testLogging.showStandardStreams = true
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.1"
            languageVersion = "1.1"
        }
    }

    jmh {
        iterations = 10 // Number of measurement iterations to do.
//        benchmarkMode = ["thrpt"] // Benchmark mode. Available modes are: [Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all]
        batchSize = 1 // Batch size: number of benchmark method calls per operation. (some benchmark modes can ignore this setting)
        fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
        operationsPerInvocation = 1 // Operations per invocation.
        timeOnIteration = "1s" // Time to spend at each measurement iteration.
        threads = 4 // Number of worker threads to run with.
        timeout = "10s" // Timeout for benchmark iteration.
//        timeUnit = "ns" // Output time unit. Available time units are: [m, s, ms, us, ns].
        warmup = "1s" // Time to spend at each warmup iteration.
        warmupBatchSize = 1 // Warmup batch size: number of benchmark method calls per operation.
//        warmupForks = 0 // How many warmup forks to make for a single benchmark. 0 to disable warmup forks.
        warmupIterations = 10 // Number of warmup iterations to do.
        zip64 = false // Use ZIP64 format for bigger archives
        jmhVersion = "1.19" // Specifies JMH version
    }
}
